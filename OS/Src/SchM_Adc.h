#ifndef SCHM_ADC_H
#define SCHM_ADC_H
/*============================================================================*
 * \b Application:        Adc \n 
 * \b Target:             target independent \n 
 * \b Compiler  :         compiler independent \n 
 * \b Module:             schm_adc.h \n 
 * \b File-Revision:      1.0.4 \n
 * \b Changeable-by-user: No \n
 * \b Module-Owner:       SSA_Team \n
 * \b Generated on:       2011/03/24 18:28:07 \n
 * \b Classification:     CONFIDENTIAL \n
\*============================================================================*/
/**\file    
 *
 * BSW Scheduler header file.The BSW Scheduler provides services (APIs)
 * for all other BSW modules, except for the OS. Hence, the BSW Scheduler
 * realizes functionality for those BSW modules
 * This file is generated by the SCG framework
 *
 * The configuration parameters was checked statically for correctness
 * by configuration editor tool and code generator. DO NOT EDIT THIS FILE MANUALLY!!! 
 * 
 * \Requirements \n
 * reqtrace{SSA-SDD-SCHM-22-1}{SSA-REQ-SCHM-78-1}
 */

/*============================================================================*
 * It is not allowed to reproduce or utilize parts of this document in any form
 * or by any means, including photocopying and microfilm, without permission in
 * writing by  Electronics & Safety Division.
 *
 *============================================================================*/

/*============================================================================*\
 * PREPROCESSOR DIRECTIVES
\*============================================================================*/

/* INCLUDE DIRECTIVES FOR STANDARD HEADERS -----------------------------------*/
#include "OS_Cfg.h"

/* INCLUDE DIRECTIVES FOR OTHER HEADERS --------------------------------------*/

/* EXPORTED DEFINES FOR CONSTANTS --------------------------------------------*/

#define SCHM_ADC_SW_MAJOR_VERSION 1u
#define SCHM_ADC_SW_MINOR_VERSION 0u
#define SCHM_ADC_SW_PATCH_VERSION 4u

#define SCHM_ADC_AR_MAJOR_VERSION 2u
#define SCHM_ADC_AR_MINOR_VERSION 1u
#define SCHM_ADC_AR_PATCH_VERSION 0u

#ifndef SCHM_E_OK
/**
 * \details Return value of SchM_ReturnType.
 *          SCHM_E_OK - no errors occured. 
 *
 * \Requirements \n
 * reqtrace{SSA-SDD-SCHM-11-1}{SSA-REQ-SCHM-110-1}
 */ 
 #define SCHM_E_OK       ((uint8)0x00)
 typedef uint8 SchM_ReturnType;
#endif
#ifndef SCHM_E_LIMIT
/**
 * \details Return value of SchM_ReturnType.
 *          SCHM_E_LIMIT - an internal limit has been exceeded. 
 *
 * \Requirements \n
 * reqtrace{SSA-SDD-SCHM-12-1}{SSA-REQ-SCHM-110-1}
 */ 
 #define SCHM_E_LIMIT    ((uint8)0x04)
#endif
#ifndef SCHM_E_NOFUNC
/**
 * \details Return value of SchM_ReturnType.
 *          SCHM_E_NOFUNC - requsted service has not the desired effect. 
 *
* \Requirements \n
 * reqtrace{SSA-SDD-SCHM-13-1}{SSA-REQ-SCHM-110-1}
 */ 
 #define SCHM_E_NOFUNC   ((uint8)0x05)
#endif
#ifndef SCHM_E_STATE
/**
 * \details Return value of SchM_ReturnType.
 *          SCHM_E_STATE - requsted service is already in use. 
 *
 * \Requirements \n
 * reqtrace{SSA-SDD-SCHM-14-1}{SSA-REQ-SCHM-110-1}
 */ 
 #define SCHM_E_STATE    ((uint8)0x07)
#endif

/*============================================================================*\
 * Sporadic Event literals 
\*============================================================================*/


/*============================================================================*\
 * Activation Point literals 
\*============================================================================*/


/*============================================================================*\
 * Cancelation Point literals 
\*============================================================================*/


/*============================================================================*\
 * Exclusive area literals 
\*============================================================================*/

 #define ADC_EXCLUSIVE_AREA_0  (0)

/*============================================================================*\
 * EXPORTED TYPEDEF DECLARATIONS
\*============================================================================*/

/* ENUMS ---------------------------------------------------------------------*/

/* STRUCTS -------------------------------------------------------------------*/

/* UNIONS --------------------------------------------------------------------*/

/* OTHER TYPEDEFS ------------------------------------------------------------*/

/*============================================================================*\
* EXPORTED OBJECT DECLARATIONS
\*============================================================================*/


/*============================================================================*\
* EXPORTED FUNCTIONS PROTOTYPES
\*============================================================================*/

/*============================================================================*\
* EXPORTED FUNCTION-LIKE-MACROS and INLINE FUNCTIONS
\*============================================================================*/



/**
 * \details   A BSW module <ModulePrefix> invokes the service SchM_Enter to 
 *            enter a module local exclusive area (also known as critical section). 
 *            The configuration of the service SchM_Enter depends on the 
 *            implementation of the BSW Scheduler Module. Because the 
 *            implementation of the BSW Scheduler module belongs to the 
 *            ECU integrators tasks, the implementation is mainly project specific.
 *
 * \param[in] InstanceId - The parameter Instance of service SchM_Enter_<ModulePrefix>   
 *            identifies a unique instance of the calling BSW module <ModulePrefix>.
 *            This parameter is omited if there is only one instance of BSW module.
 * \param[in] ExclusiveArea -  The parameter ExclusiveArea of service SchM_Enter_<ModulePrefix> 
 *            identifies a unique internal resource of the BSW Module <ModulePrefix>. 
 *
 * \return   none
 *
 * \ServID             0x03
 * \Reentrancy         non-reentrant 
 * \Synchronism        synchronous 
 * \Requirements \n
 * reqtrace{SSA-SDD-SCHM-19-1}{SSA-REQ-SCHM-148-1,
 *                             SSA-REQ-SCHM-149-1, SSA-REQ-SCHM-150-1, SSA-REQ-SCHM-151-1,
 *                             SSA-REQ-SCHM-152-1, SSA-REQ-SCHM-153-1, SSA-REQ-SCHM-154-1,
 *                             SSA-REQ-SCHM-155-1, SSA-REQ-SCHM-156-1, SSA-REQ-SCHM-157-1,
 *                             SSA-REQ-SCHM-158-1, SSA-REQ-SCHM-159-1,
 *                             SSA-REQ-SCHM-161-1, SSA-REQ-SCHM-267-1}
 */ 
 #define SchM_Enter_Adc(ExclusiveArea)        Enter_Adc##ExclusiveArea


/**
 * \defgroup
 * \name Enter exclusive area macros:
 * \details Enter exclusive area definitions. These uses function defined by the user to access exlusive area. 
 * @{
 */ 
 /* Exclusive Area: "ADC_EXCLUSIVE_AREA_0" enter */
 #define Enter_AdcADC_EXCLUSIVE_AREA_0        SchM_Enter_Adc_Excl_Area0

/* @}*/


/**
 * \details   A BSW module <ModulePrefix> invokes the service SchM_Enter to 
 *            exit a module local exclusive area (also known as critical section). 
 *            The configuration of the service SchM_Enter depends on the 
 *            implementation of the BSW Scheduler Module. Because the 
 *            implementation of the BSW Scheduler module belongs to the 
 *            ECU integrators tasks, the implementation is mainly project specific.
 *
 * \param[in] InstanceId - The parameter Instance of service SchM_Exit_<ModulePrefix>   
 *            identifies a unique instance of the calling BSW module <ModulePrefix>.
 *            This parameter is omited if there is only one instance of BSW module.
 * \param[in] ExclusiveArea -  The parameter ExclusiveArea of service SchM_Exit_<ModulePrefix> 
 *            identifies a unique internal resource of the BSW Module <ModulePrefix>. 
 *
 * \return   none
 *
 * \ServID             0x04
 * \Reentrancy         non-reentrant 
 * \Synchronism        synchronous 
 * \Requirements \n
 * reqtrace{SSA-SDD-SCHM-20-1}{SSA-REQ-SCHM-162-1,
 *                             SSA-REQ-SCHM-163-1, SSA-REQ-SCHM-164-1, SSA-REQ-SCHM-165-1,
 *                             SSA-REQ-SCHM-166-1, SSA-REQ-SCHM-167-1, SSA-REQ-SCHM-168-1,
 *                             SSA-REQ-SCHM-170-1, SSA-REQ-SCHM-171-1, SSA-REQ-SCHM-172-1,
 *                             SSA-REQ-SCHM-173-1, SSA-REQ-SCHM-175-1}
 *                             SSA-REQ-SCHM-169-1, SSA-REQ-SCHM-268-1}
 */ 
 #define SchM_Exit_Adc(ExclusiveArea)        Exit_Adc##ExclusiveArea


/**
 * \defgroup
 * \name Exit exclusive area macros:
 * \details Exit exclusive area definitions. These uses function defined by the user to exit exlusive area. 
 * @{
 */ 
 /* Exclusive Area: "ADC_EXCLUSIVE_AREA_0" exit */
 #define Exit_AdcADC_EXCLUSIVE_AREA_0        SchM_Exit_Adc_Excl_Area0

/* @}*/

#endif
